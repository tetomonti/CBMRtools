% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnAnalysis.R
\name{nnAnalysis}
\alias{nnAnalysis}
\title{nnAnalysis}
\usage{
nnAnalysis(
  dat,
  y = NULL,
  y.i = NULL,
  score = c("pearson", "spearman", "euclid"),
  nperm = 0,
  control = NULL,
  seed = NULL,
  verbose = F,
  smooth = 1
)
}
\arguments{
\item{dat}{NxM genes-by-sample matrix ('ExpressionSet' or 'resdata' or 'gctdata' object)}

\item{y}{M-tuple vector to use as the prototype profile}

\item{y.i}{alternatively, specify the row index in dat where to find the prototype profile}

\item{score}{similarity measure, must be one of 'pearson', 'spearman' or 'euclid'}

\item{nperm}{number of permutation iterations (default 0)}

\item{control}{constrained permutations (control for confounding factor)}

\item{seed}{random number generator seed (for reproducible results)}

\item{verbose}{verbose output}

\item{smooth}{smoother to prevent 0 p-values (default 1)}
}
\value{
list object with attributes 'pval' and 'nperm' corresponding to nn analysis permutation results
}
\description{
\code{nnAnalysis} rank rows (genes) by their 'similarity' to a
prototype profile and carries out permutation-based p-value
calculation
}
\examples{

require(Biobase)
data(eSet.brca.100)

 ## passing the actual vector as argument
 ##
 NNout1 <- nnAnalysis(dat=eSet.brca.100,y=exprs(eSet.brca.100)[1,],score='pearson',
                      nperm=1000,seed=123,verbose=TRUE,smooth=1)
 head(NNout1$pval)

 ## passing the index (within the matrix) as argument
 ##
 NNout2 <- nnAnalysis(dat=eSet.brca.100,y.i=1,score='pearson',nperm=100,
                      seed=123,verbose=TRUE,smooth=1)
 head(NNout2$pval)
 all.equal(NNout1$pval,NNout2$pval) # TRUE

 ## controlling for a confounder (only discrete)
 ##
 CTL <- pData(eSet.brca.100)[,'ER_status']
 NNout3 <- nnAnalysis(dat=eSet.brca.100,y.i=1,score='pearson',nperm=100,
                      seed=123,control=CTL,verbose=TRUE,smooth=1)
 head(NNout3$pval)

}
