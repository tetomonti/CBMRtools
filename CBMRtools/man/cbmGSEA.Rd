% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cbmGSEA.R
\name{cbmGSEA}
\alias{cbmGSEA}
\title{cbmGSEA}
\usage{
cbmGSEA(
  eSet = NULL,
  rnkScore = NULL,
  pheno = NULL,
  tag = NULL,
  cond = NULL,
  control = NULL,
  geneId = NULL,
  gSet,
  minGset = 5,
  nperm = 100,
  score = c("tScore", "delta"),
  do.abs = FALSE,
  robust = FALSE,
  method = c("pearson", "spearman", "euclidean"),
  alternative = c("two.sided", "greater", "less"),
  weighted = FALSE,
  weight.p = 1,
  smoother = 1,
  clsLev = c("neg", "pos"),
  confound = NULL,
  seed = NULL,
  do.pval = !weighted,
  exhaustive = FALSE,
  do.plot = !is.null(plot.name),
  plot.name = NULL,
  plot.dev = pdf,
  topG = 20,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{eSet}{an [m-genes x n-samples] matrix}

\item{rnkScore}{provide a ranking score instead}

\item{pheno}{class ID}

\item{tag}{id of gene to use as template (nearest neighbor mode)}

\item{cond}{treatment label (e.g., TCDD)}

\item{control}{control label (e.g., DMSO)}

\item{geneId}{fData column containing the gene symbols}

\item{gSet}{a named list of genesets (i.e. vectors of gene IDs)}

\item{minGset}{minimum length of accepted genesets}

\item{nperm}{number of permutation iterations}

\item{score}{one of {"tScore","delta"}: differential score used when cls is specified}

\item{do.abs}{rank genes by absolute value of score}

\item{robust}{compute robust score}

\item{method}{one of {"pearson","spearman","euclidean"}: score used when tag is specified}

\item{alternative}{one of {"two.sided","greater","less"}}

\item{weighted}{use weighted KS score as in GSEA}

\item{weight.p}{weight's exponent}

\item{smoother}{smooth p-values}

\item{clsLev}{phenotype labels (e.g., c('normal','tumor'))}

\item{confound}{confounder variable (must be categorical)}

\item{seed}{random seed (for reproducible results)}

\item{do.pval}{compute asymptotic p-values}

\item{exhaustive}{generate all possible permutations}

\item{do.plot}{generate ks plots}

\item{plot.name}{file stub where to save ks plots}

\item{plot.dev}{display device}

\item{topG}{number of genesets to display per direction}

\item{verbose}{verbosity TRUE/FALSE}
}
\value{
a data.frame with one geneset per row and columns reporting KS score, p-value, q-value, etc.
}
\description{
\code{cbmGSEA} re-implementation of Broad's GSEA, with
gene-specific permutation-based p-value calculation and FDR
correction by the BH method
}
\examples{

data(cbmGSEAdata)
if ( is.null(cbmGSEA.eSet) || is.null(cbmGSEA.gSet) ) stop( "missing objects" )

table(pData(cbmGSEA.eSet)$tissue_type) # expecting 8 AN's + 8 Tumor's

# 1) phenotype shuffling

set.seed(123)
OUT1 <- cbmGSEA(eSet=cbmGSEA.eSet,gSet=cbmGSEA.gSet,pheno="tissue_type",cond="Tumor",control="AN",
                nperm=100,verbose=TRUE,do.plot=TRUE,topG=1)
print(OUT1[,1:5])

# 2) rank shuffling (based on pre-computed ranked list)

# carry out a simple t-score calculation (notice the '-', to achieve a decreasing=TRUE sort)
rnkS <- -tScore(x=exprs(cbmGSEA.eSet),cls=factor(pData(cbmGSEA.eSet)$tissue_type))

set.seed(123)
OUT2 <- cbmGSEA(rnkScore=rnkS,gSet=cbmGSEA.gSet,nperm=100,verbose=TRUE,do.plot=TRUE,topG=1)
print(OUT2[,1:5])

# ascertain that the results are the same with the two methods
all.equal(OUT1[,"score"],OUT2[,"score"]) # same results expected

# 3) gene tag shuffling (ranking by nearest neighbor with respect to "MAML2")

set.seed(123)
OUT3 <- cbmGSEA(eSet=cbmGSEA.eSet,tag="MAML2",gSet=cbmGSEA.gSet,nperm=100,verbose=TRUE,do.plot=TRUE,topG=1)
print(OUT3[,1:5])

}
