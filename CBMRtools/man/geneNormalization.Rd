% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geneNormalization.R
\name{geneNormalization}
\alias{geneNormalization}
\title{geneNormalization}
\usage{
geneNormalization(norm, base, norm.sub = NULL, base.sub = NULL, robust = FALSE)
}
\arguments{
\item{norm}{dataset to normalize}

\item{base}{dataset with respect to which norm will be normalized}

\item{norm.sub}{subset of norm's samples to be used as reference}

\item{base.sub}{subset of base's samples to be used as reference}

\item{robust}{use median/MAD in place of mean/sd}
}
\description{
\code{geneNormalization} gene-specific normalization, so that each
gene has the same mean/sd in two datasets
}
\examples{

data(eSet.brca.100)
set.seed(123) # for reproducible results
dat.idx <- sort(sample(ncol(eSet.brca.100),ncol(eSet.brca.100)/2))

N <- eSet.brca.100[, dat.idx]
B <- eSet.brca.100[,-dat.idx]

set.seed(123)
N.sub <- sampleNames(N)[sort(sample(ncol(N),ncol(N)/2))]
B.sub <- sampleNames(B)[sort(sample(ncol(B),ncol(B)/2))]

# normalize using all samples
NORMall <- geneNormalization(exprs(N),exprs(B))
plot(apply(exprs(B),1,mean),apply(NORMall,1,mean),xlab="base",ylab="norm",main="all")
all.equal(apply(exprs(B),1,mean),apply(NORMall,1,mean)) # TRUE
 
# normalize using a subset of samples in both datasets
NORMsub <- geneNormalization(exprs(N),exprs(B),norm.sub=N.sub,base.sub=B.sub)

# the overall gene means are different
plot(apply(exprs(B),1,mean),apply(NORMsub,1,mean),
     xlab="base",ylab="norm",main="sub")
all.equal(apply(exprs(B),1,mean),apply(NORMsub,1,mean)) # FALSE

# but they are the same within the subsets
plot(apply(exprs(B[,B.sub]),1,mean),apply(NORMsub[,N.sub],1,mean),
     xlab="base",ylab="norm",main="within sub")
all.equal(apply(exprs(B[,B.sub]),1,mean),apply(NORMsub[,N.sub],1,mean)) # TRUE
 
}
